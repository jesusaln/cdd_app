#!/bin/bash

# =====================================================
# DESPLIEGUE DOCKER - 3 COMANDOS SIMPLES
# =====================================================

echo "üê≥ DESPLIEGUE DOCKER ULTRA-SIMPLE"
echo "==============================="

# =====================================================
# COMANDO 1: TRANSFERIR ARCHIVOS
# =====================================================

green "üì¶ COMANDO 1: Transferir archivos al VPS"

echo "Ejecuta en Windows PowerShell:"
echo ""
echo "scp 'cdd_app_*.zip' root@191.101.233.82:~/"
echo "scp '.env' root@191.101.233.82:~/"
echo "scp 'optimize_database.sql' root@191.101.233.82:~/"
echo ""

# =====================================================
# COMANDO 2: CONFIGURAR DOCKER
# =====================================================

green "üê≥ COMANDO 2: Configurar Docker en VPS"

echo "Ejecuta en el VPS Ubuntu:"
echo ""
echo "# 1. Instalar Docker (si no est√° instalado)"
echo "curl -fsSL https://get.docker.com -o get-docker.sh"
echo "sudo sh get-docker.sh"
echo "sudo usermod -aG docker \$USER"
echo ""
echo "# 2. Instalar Docker Compose"
echo "sudo curl -L 'https://github.com/docker/compose/releases/latest/download/docker-compose-\$(uname -s)-\$(uname -m)' -o /usr/local/bin/docker-compose"
echo "sudo chmod +x /usr/local/bin/docker-compose"
echo ""
echo "# 3. Extraer aplicaci√≥n"
echo "cd /var/www && unzip ~/cdd_app_*.zip && chown -R www-data:www-data cdd_app/"
echo ""
echo "# 4. Configurar permisos"
echo "chmod +x deploy_docker.sh"
echo ""

# =====================================================
# COMANDO 3: DESPLEGAR
# =====================================================

green "üöÄ COMANDO 3: Desplegar aplicaci√≥n"

echo "Ejecuta en el VPS:"
echo ""
echo "# Desplegar todo autom√°ticamente"
echo "./deploy_docker.sh"
echo ""
echo "# O ejecutar paso a paso:"
echo "docker-compose build"
echo "docker-compose up -d"
echo "docker-compose exec app php artisan migrate --force"
echo ""

# =====================================================
# ACCESO FINAL
# =====================================================

green "üåê ACCESO FINAL"

echo ""
blue "Despu√©s del despliegue:"
echo "üìç Aplicaci√≥n: http://localhost (Nginx)"
echo "üìç Aplicaci√≥n alternativa: http://localhost:3000"
echo "üìç Base de datos: localhost:5432"
echo "üìç Redis: localhost:6379"
echo ""

# =====================================================
# COMANDOS DE MANTENIMIENTO
# =====================================================

green "üîß COMANDOS DE MANTENIMIENTO"

echo ""
echo "Ver estado de contenedores:"
echo "  docker-compose ps"
echo ""
echo "Ver logs:"
echo "  docker-compose logs -f"
echo ""
echo "Entrar al contenedor:"
echo "  docker-compose exec app bash"
echo ""
echo "Detener aplicaci√≥n:"
echo "  docker-compose down"
echo ""
echo "Actualizar aplicaci√≥n:"
echo "  docker-compose exec app php artisan migrate"
echo ""

green "‚úÖ ¬°DESPLIEGUE DOCKER LISTO!"

echo ""
blue "Este enfoque con Docker es:"
blue "‚úÖ M√°s limpio que instalaci√≥n directa"
blue "‚úÖ M√°s f√°cil de mantener"
blue "‚úÖ M√°s seguro"
blue "‚úÖ M√°s escalable"
blue "‚úÖ Perfecto para producci√≥n"

echo ""
green "üéØ VENTAJAS DE DOCKER:"
echo "üîπ Todos los servicios en contenedores aislados"
echo "üîπ F√°cil backup y restauraci√≥n"
echo "üîπ Configuraci√≥n consistente"
echo "üîπ F√°cil escalabilidad"
echo "üîπ Sin conflictos de puertos"

echo ""
blue "üöÄ ¬°Tu aplicaci√≥n estar√° lista para miles de registros!"