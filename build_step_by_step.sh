#!/bin/bash

echo "=== CONSTRUCCI√ìN PASO A PASO DE CDD APP ==="
echo "Fecha: $(date)"
echo ""

# Funci√≥n para verificar errores
check_error() {
    if [ $? -ne 0 ]; then
        echo "‚ùå ERROR en el paso: $1"
        echo "El proceso se detuvo. Revisa los errores arriba."
        exit 1
    fi
}

echo "üöÄ PASO 1: Limpiar cach√©s anteriores..."
docker system prune -f
docker builder prune -f
check_error "limpieza de cach√©s"

echo ""
echo "üîß PASO 2: Construir la imagen con el Dockerfile mejorado..."
echo "Comando: docker build --no-cache -t cdd_app_fixed ."
docker build --no-cache -t cdd_app_fixed .
check_error "construcci√≥n de imagen"

echo ""
echo "‚úÖ PASO 3: Verificar que la imagen se construy√≥ correctamente..."
docker images | grep cdd_app_fixed
check_error "verificaci√≥n de imagen"

echo ""
echo "üîç PASO 4: Verificar que las extensiones PHP est√°n instaladas..."
echo "Ejecutar contenedor temporal para verificar extensiones:"
docker run --rm cdd_app_fixed php -m | grep -E "(pdo_mysql|pdo_pgsql|mbstring|gd|zip|bcmath)"
check_error "verificaci√≥n de extensiones PHP"

echo ""
echo "üéâ ¬°CONSTRUCCI√ìN COMPLETADA EXITOSAMENTE!"
echo ""
echo "üìã PR√ìXIMOS PASOS:"
echo "1. Probar el contenedor completo con docker-compose:"
echo "   docker-compose up --build -d"
echo ""
echo "2. Verificar que la aplicaci√≥n funciona correctamente"
echo "3. Si todo est√° bien, puedes eliminar la imagen de prueba:"
echo "   docker rmi cdd_app_fixed"
echo ""
echo "‚úÖ El problema de PDO PostgreSQL deber√≠a estar resuelto ahora."