services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args: [ APP_ENV=production, BUILD_ASSETS=false ]
    env_file: [ .env ]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports: [ "8080:80" ]
    restart: unless-stopped

  queue:
    build:
      context: .
      dockerfile: Dockerfile
      args: [ APP_ENV=production, BUILD_ASSETS=false ]
    command: php artisan queue:work --sleep=1 --tries=3
    env_file: [ stack.env ]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  db:
    image: postgres:16
    env_file: [ stack.env ]
    volumes:
      - db_data:/var/lib/postgresql/data
    ports: [ "5433:5432" ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    volumes: [ "redis_data:/data" ]
    restart: unless-stopped

volumes:
  db_data:
  redis_data:
