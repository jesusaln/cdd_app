version: '3.8'

services:
  # Aplicación Laravel
  app:
    build: .
    container_name: cdd-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./storage/app:/var/www/storage/app
      - ./storage/framework:/var/www/storage/framework
      - ./storage/logs:/var/www/storage/logs
      - ./bootstrap/cache:/var/www/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=pgsql
      - DB_HOST=pg
      - DB_PORT=5432
      - DB_DATABASE=${DB_NAME}
      - DB_USERNAME=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - TZ=America/Hermosillo
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - cdd-network

  # Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    container_name: cdd-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
      - ./public:/var/www/public:ro
    depends_on:
      - app
    networks:
      - cdd-network

  # Base de datos PostgreSQL
  pg:
    image: postgres:16
    container_name: cdd-pg
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: America/Hermosillo
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cdd-network

  # Redis para caché y sesiones
  redis:
    image: redis:7-alpine
    container_name: cdd-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-cddredis}
    volumes:
      - redisdata:/data
    networks:
      - cdd-network

  # pgAdmin (opcional - para gestión visual)
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: cdd-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@asistenciavircom.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      TZ: America/Hermosillo
    ports:
      - "8081:80"
    depends_on:
      pg:
        condition: service_healthy
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - cdd-network

networks:
  cdd-network:
    driver: bridge

volumes:
  pgdata:
    driver: local
  redisdata:
    driver: local
  pgadmin:
    driver: local