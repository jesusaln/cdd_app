#!/bin/bash

# Script de despliegue para Climas del Desierto
# Uso: ./docker/deploy.sh [entorno]

set -e

ENTORNO=${1:-production}
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

echo "üöÄ Iniciando despliegue para Climas del Desierto..."
echo "üìç Entorno: $ENTORNO"
echo "üìÇ Directorio del proyecto: $PROJECT_ROOT"

# Verificar si existe archivo .env para el entorno
ENV_FILE="$PROJECT_ROOT/.env.$ENTORNO"
if [ ! -f "$ENV_FILE" ]; then
    echo "‚ùå No se encontr√≥ el archivo de configuraci√≥n: $ENV_FILE"
    echo "üí° Copia .env.production a .env.$ENTORNO y configura las variables"
    exit 1
fi

# Copiar archivo de entorno si no existe .env
if [ ! -f "$PROJECT_ROOT/.env" ]; then
    echo "üìã Copiando configuraci√≥n de entorno..."
    cp "$ENV_FILE" "$PROJECT_ROOT/.env"
fi

# Crear directorios necesarios
echo "üìÅ Creando directorios necesarios..."
mkdir -p "$PROJECT_ROOT/docker/pgdata"
mkdir -p "$PROJECT_ROOT/docker/redis"
mkdir -p "$PROJECT_ROOT/docker/pgadmin"
mkdir -p "$PROJECT_ROOT/storage/app"
mkdir -p "$PROJECT_ROOT/storage/framework/cache"
mkdir -p "$PROJECT_ROOT/storage/framework/sessions"
mkdir -p "$PROJECT_ROOT/storage/framework/views"
mkdir -p "$PROJECT_ROOT/storage/logs"

# Establecer permisos
echo "üîê Configurando permisos..."
chmod -R 755 "$PROJECT_ROOT/storage"
chmod -R 755 "$PROJECT_ROOT/bootstrap/cache"

# Construir y levantar contenedores
echo "üê≥ Construyendo y levantando contenedores..."
cd "$PROJECT_ROOT"

# Detener contenedores existentes
docker-compose down || true

# Construir im√°genes
docker-compose build --no-cache

# Levantar servicios
docker-compose up -d

# Esperar a que la base de datos est√© lista
echo "‚è≥ Esperando a que la base de datos est√© disponible..."
sleep 30

# Ejecutar migraciones
echo "üóÑÔ∏è Ejecutando migraciones..."
docker-compose exec -T app php artisan migrate --force

# Ejecutar seeders si es necesario
echo "üå± Ejecutando seeders..."
docker-compose exec -T app php artisan db:seed --force || echo "‚ö†Ô∏è No se encontraron seeders o hubo un error"

# Optimizar aplicaci√≥n
echo "‚ö° Optimizando aplicaci√≥n..."
docker-compose exec -T app php artisan config:cache
docker-compose exec -T app php artisan route:cache
docker-compose exec -T app php artisan view:cache

# Crear enlace simb√≥lico para storage
echo "üîó Creando enlace simb√≥lico para storage..."
docker-compose exec -T app php artisan storage:link || echo "‚ö†Ô∏è El enlace ya existe o hubo un error"

echo "‚úÖ ¬°Despliegue completado exitosamente!"
echo ""
echo "üåê Servicios disponibles:"
echo "   ‚Ä¢ Aplicaci√≥n: http://localhost (o el dominio configurado)"
echo "   ‚Ä¢ pgAdmin: http://localhost:8081"
echo ""
echo "üîß Comandos √∫tiles:"
echo "   ‚Ä¢ Ver logs: docker-compose logs -f app"
echo "   ‚Ä¢ Reiniciar servicios: docker-compose restart"
echo "   ‚Ä¢ Detener servicios: docker-compose down"
echo ""
echo "üìù Recuerda actualizar las siguientes variables en .env.$ENTORNO:"
echo "   ‚Ä¢ DB_PASSWORD"
echo "   ‚Ä¢ REDIS_PASSWORD"
echo "   ‚Ä¢ PGADMIN_PASSWORD"
echo "   ‚Ä¢ APP_KEY (si no est√° configurada)"